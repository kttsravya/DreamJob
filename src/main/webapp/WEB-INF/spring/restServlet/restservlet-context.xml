<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
   <!-- <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  
        one of the several properties available; the maximum file size in bytes
        <beans:property name="maxUploadSizePerFile" value="5242880"/>
        
   </beans:bean> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <resources mapping="/resources/**" location="/resources/" /> -->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	 <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> 
	
	<context:component-scan base-package="com.project.dreamjob.restcontrollers" />
	
	
	<!-- below bean is for exceptions to views -->
	
	 <beans:bean id="simpleMappingExceptionResolver" class=
     "org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <beans:property name="exceptionMappings">
      <beans:map>
         <beans:entry key="EmailNotExistInDbException" value="error"/>
         <beans:entry key="EmailAlreadyExistInDbException" value="error"/>
         <beans:entry key="RecruiterIdDosentExistInDbException" value="error"/>
         <beans:entry key="DbEmptyException" value="error"/>
         <beans:entry key="EmptyPasswordFieldException" value="error"/> 
          <beans:entry key="NumberFormatException" value="error"/> 
          <beans:entry key="InvalidZipCodeException" value="error"/> 
          <beans:entry key="RecruiterNotInSignUpListException" value="error"/> 
          <beans:entry key="ZipCodeInvalidException" value="error"/> 
          <beans:entry key="ConstraintViolationException" value="error"/>
          <beans:entry key="GivenJobSeekerIdNotExistInDbException" value="error"/>  
      
      </beans:map>
    </beans:property>
 
  </beans:bean>
  
  <!-- Configure to plugin JSON as request and response in method handler -->
	<!-- <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean> -->
	
	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<!-- <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
			
		
	<!-- </beans:bean>	 -->
	
	
  
  
	
	
	
	
</beans:beans>
